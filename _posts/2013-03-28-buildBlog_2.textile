---
layout: post
title: 让大家一起来写blog吧-配置篇
categories: blog
---

h3. 配置篇

h3. 一、配置和使用Github

要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。Windows版的下载地址在 "这里":http://code.google.com/p/msysgit/downloads/list 。其他系统的安装也可以参考 "官方的安装教程":https://help.github.com/articles/set-up-git 。
下载安装客户端之后，各个系统的配置就类似了，我们使用windows作为例子，Linux和Mac与此类似。
为了更好的完成下面的步骤，建议先到 "Github站点":http://github.com 申请自己的帐号，因为后面的步骤中需要用到。
在Windows下，打开Git Bash，其他系统下面则打开终端（Terminal）

h3. 注意：下面的步骤是设置给Github提交代码的权限

h3. 1、检查SSH keys的设置

首先我们需要检查你电脑上现有的ssh key：

{% highlight bash %}
$ cd ~/.ssh
{% endhighlight %}

如果显示“No such file or directory”，跳到第三步，否则继续。

h3. 2、备份和移除原来的ssh key设置：

因为已经存在key文件，所以需要备份旧的数据并删除：

{% highlight bash %}
$ ls 
id_rsa  id_rsa.pub  known_hosts
$ mkdir key_backup
$ mv id_rsa* key_backup
{% endhighlight %}

h3. 3、生成新的SSH Key：

输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。

{% highlight bash %}
$ ssh-keygen -t rsa -C "邮件地址@youremail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):<回车就好>
{% endhighlight %}

然后系统会要你输入加密串（Passphrase）：

{% highlight bash %}
Enter passphrase (empty for no passphrase):<输入加密串>
Enter same passphrase again:<再次输入加密串>
{% endhighlight %}

最后看到这样的界面，就成功设置ssh key了：

{% highlight bash %}
Your identification has been saved in /home/lxinji/.ssh/id_rsa.
Your public key has been saved in /home/lxinji/.ssh/id_rsa.pub.
The key fingerprint is:
6a:a4:c9:98:85:48:c4:c9:38:9e:90:fa:23:b8:ca:54 loxinji@gmail.com
The key's randomart image is:
+--[ RSA 2048]----+
|+o.              |
|*+               |
|+o.              |
|o+ .             |
|o..E. . S        |
|o += + .         |
| +o.+ o          |
|+    .           |
|o.               |
+-----------------+
{% endhighlight %}

h3. 4、添加SSH Key到GitHub：

在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。
用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。
在GitHub的主页上右上角点击设置按钮：

!/images/buildBlog_4.0.jpg!

在左侧选择SSH Keys项，点击“Add SSH key”, 把复制的内容粘贴进去，然后点击Add Key按钮即可，注意：若添加不成功，请重新复制本地SSH Keys

h3. 5、测试一下

可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：

{% highlight bash %}
$ ssh -T git@github.com
{% endhighlight %}

如果是下面的反应(本人配置没有出现过，若出现可以参考以下方法)：

{% highlight bash %}
The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
{% endhighlight %}

不要紧张，输入yes就好，然后会看到：

{% highlight bash %}
Hi <em>username</em>! You've successfully authenticated, but GitHub does not provide shell access.
{% endhighlight %}

到这里，已经生成了SSH Key，这里的主要作用是在本地Git和Github进行连接时必须要进行身份确认，SSH key就是认证凭证。

h3. 6、设置你的账号信息

{% highlight bash %}
$ git config --global user.name "你的名字"
$ git config --global user.email "your_email@youremail.com"
{% endhighlight %}

现在你可以成功连接GitHub了,测试连接放在下一篇里，因为现在你的远程仓库中还没有代码可以pull到本地。
