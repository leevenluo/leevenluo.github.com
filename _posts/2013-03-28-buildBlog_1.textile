---
layout:     post
title:      一起写blog-起始篇
categories: blog
---

h1. 起始篇

我这里所讲的博客搭建环境是: **github pages + jekyll**

在这里, 先感谢以下文章的作者, 是你们的博文让我可以成功搭建博客, 在我的文章中或多或少的引用了你们文章中的片段, 只为更多的朋友能早日建立属于他们自己的博客！

"beiyuu博客":http://beiyuu.com/github-pages/
"yanping博客":http://yanping.me/cn/blog/2012/03/18/github-pages-step-by-step/

h1. 什么是gitbub pages？

首先需要介绍下Github, GitHub 是一个用于使用Git版本控制系统项目的共享虚拟主机服务. 它由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成. 总的来说, github 是一个免费的代码管理仓库, 负责开发项目的代码托管, 关于github的相关信息可以 "点击这里":http://zh.wikipedia.org/wiki/GitHub .

github给你提供了项目的存储空间, 在你的项目主页上可以浏览源码树:

<img width="552" height="230" src="/images/buildBlog_1.0.png"/>

不过这样的项目主页似乎不怎么友好, 不能提供简易的操作和展示项目的模型和效果, 所以github需要提供一个友好且易于展示项目的平台, github pages就这样诞生了. github Pages可以被认为是用户编写的、托管在github上的静态网页.

github提供模板, 允许站内生成网页, 但也允许用户自己编写网页, 然后上传. 有意思的是, 这种上传并不是单纯的上传, 而是会经过Jekyll程序的再处理.


h1. Jekyll是什么？

Jekyll（发音/'dʒiːk əl/, "杰克尔"）是一个静态站点生成器, 它会根据网页源码生成静态文件. 它提供了模板、变量、插件等功能, 所以实际上可以用来编写整个网站. 整个思路到这里就很明显了. 你先在本地编写符合Jekyll规范的网站源码, 然后上传到github, 由github生成并托管整个网站.

这种做法的好处是:

* 免费, 无限流量.
* 享受git的版本管理功能, 不用担心文章遗失.
* 你只要用自己喜欢的编辑器写文章就可以了, 其他事情一概不用操心, 都由github处理.

它的缺点是:

* 有一定技术门槛, 你必须要懂一点git和网页开发.
* 它生成的是静态网页, 添加动态功能必须使用外部服务, 比如评论功能就只能用disqus.
* 它不适合大型网站, 因为没有用到数据库, 每运行一次都必须遍历全部的文本文件, 网站越大, 生成时间越长.

但是, 综合来看, 它不失为搭建中小型Blog或项目主页的最佳选项之一.
